//Arch Linux
//iwctl
device list
station wlan0 scan
station wlan0 get-networks
station wlan connect network

//ends
efibootmgr
grub-install --target=x86_64-efi --efi-directory=/boot --recheck
exit
reboot
----------
sudo pacman -S os-prober
nano /etc/default/grub
//#GRUB_DISABLE_OS_PROBER=false расском
os-prober
grub-mkconfig -o /boot/grub/grub.cfg

//git
1.sudo pacman -S git

//yay
1.git clone https://aur.archlinux.org/yay.git
2.cd yay -> makepkg -si

//codecs
1.pacman -S lib32-gst-plugins-base lib32-gst-plugins-good  
2.pacman -S gst-plugins-base gst-plugins-good gst-plugins-bad gst-plugins-ugly gst-libav ffmpeg \
   x264 x265 libvpx libdvdcss
3.sudo pacman -S timeshift
4.yay -S ttf-ms-win10-auto
5.fc-cache -f -v
6.sudo pacman -S ttf-dejavu ttf-font-awesome ttf-ubuntu-font-family ttf-liberation

//opera-ffmpeg
1.yay -S opera-ffmpeg-codecs-bin

//flatpak
1.sudo pacman -S flatpak
2.flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo

//pamac
1.yay -S pamac
yay -S pamac-flatpak

//poweprofile
1.sudo pacman -S power-profiles-daemon
2.sudo systemctl enable power-profiles-daemon.service
3.sudo systemctl start power-profiles-daemon.service

//Доп.настрой
1.sudo pacman -S gnome-tweaks
2.sudo pacman -S webapp-manager 
dash-to-dock
extension-appindicator
sudo pacman -S webapp-manager
3.sudo pacman -S nftables

//zsh
1.sudo pacman -S zsh
2.sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
3.git clone --depth=1 https://github.com/romkatv/powerlevel10k.git "${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k"
4.Open ~/.zshrc, find the line that sets ZSH_THEME, and change its value to "powerlevel10k/powerlevel10k"
5.sudo pacman -S ttf-nerd-fonts-symbols
6.exec zsh
*p10k configure

//zsh-syntax
1.git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
2. sudo nano ~/.zshrc -> plugins=(... zsh-syntax-highlighting)

//neofetch
1.yay -S neofetch

//snapper
1.sudo pacman -S snapper btrfs-progs grub-btrfs snap-pac inotify-tools
2.yay -S btrfs-assistant
3.sudo snapper -c root create-config /
4.sudo systemctl enable --now snapper-timeline.timer
5.sudo systemctl enable --now snapper-cleanup.timer
6.sudo systemctl enable --now grub-btrfsd.service
sudo grub-mkconfig -o /boot/grub/grub.cfg

//
3.sudo chmod a+rx /.snapshots
4.sudo chown :users /.snapshots
5.sudo chmod a+rx /.snapshots
6.sudo chown :users /.snapshots
7.sudo grub-mkconfig -o /boot/grub/grub.cfg


-----------------


//Мини гайд на настройку Manjaro

//Failed Synchronize Database
1.sudo rm /var/lib/pacman/db.lck 
2.sudo pacman -S wxwidgets-gtk3 wxwidgets-common
(*)sudo pacman -Rdd wxgtk-common wxgtk2 wxgtk3

//Dash to Dock - прозрачность 77
//Kdeicons и т.д

//yay
sudo pacman -S yay 

//opera-ffmpeg
yay -S opera-ffmpeg-codecs-bin

//zen-kernel
yay -S linux-zen-versioned-headers-bin linux-zen-versioned-headers-bin

----zen-kernel+(если ошибки)-----
*установить такое же ядро из архива manjaro(если zen6.16.4, то установить 6.12-manjaro)
*yay -S linux-zen-versioned-bin linux-zen-versioned-headers-bin
*запускаемся уже через zen-kernel и вперед
1.sudo pacman -S nvidia-dkms nvidia-utils nvidia-settings

//rtl8821-2020708
Просто ставить 6.16+ ядро

//Davinci Resolve
1.Качаем с оф. сайта
2.sudo mkdir -p /opt/resolve/libs/disabled-libraries
3.sudo mv /opt/resolve/libs/libglib-2.0.so* /opt/resolve/libs/disabled-libraries/
4.sudo mv /opt/resolve/libs/libgio-2.0.so* /opt/resolve/libs/disabled-libraries/
5.sudo mv /opt/resolve/libs/libgmodule-2.0.so* /opt/resolve/libs/disabled-libraries/
6.LD_PRELOAD="/usr/lib/libglib-2.0.so /usr/lib/libgio-2.0.so" /opt/resolve/bin/resolve

//zram
1.sudo pacman -Syu zram-generator
2.sudo nano /etc/systemd/zram-generator.conf

[zram0]
zram-size = ram 
compression-algorithm = zstd
swap-priority = 100
fs-type = swap

3.sudo systemctl daemon-reload
4.sudo systemctl start systemd-zram-setup@zram0.service

//neofetch
yay -S neofetch



--------------------



//Мини гайд на настройку OpenSuse
1.sudo zypper refresh (or the short version: sudo zypper ref)
2.sudo zypper dist-upgrade (or the short version: sudo zypper dup)
3.sudo zypper addrepo -cfp 90 'https://ftp.gwdg.de/pub/linux/misc/packman/suse/openSUSE_Tumbleweed/' packman
4.sudo zypper ref
5.sudo zypper dist-upgrade --from packman --allow-vendor-change
6.sudo zypper install --from packman ffmpeg gstreamer-plugins-{good,bad,ugly,libav} libavcodec-full vlc-codecs
7.Yast -> System -> Network Settings -> Hostname/Dns -> u nickname
8.nano ~/.bashrc
9.export PS1="\[\e[01;32m\]\u\[\e[01;32m\]@\[\e[01;32m\]\h\[\e[0;37m\]:\[\e[01;34m\]\w\[\e[0;37m\]> \[\e[0m\]" (добавить в файл, записать и сохранить)

//Установка управлениея питанием
1.zypper addrepo https://download.opensuse.org/repositories/Base:System/openSUSE_Tumbleweed/Base:System.repo
2.zypper refresh
3.zypper install power-profiles-daemon

//Установка libgthread-2_0-0, чтобы IDE работала
1.zypper addrepo https://download.opensuse.org/repositories/home:arachnos/openSUSE_Tumbleweed/home:arachnos.repo
2.zypper refresh
3.zypper install libgthread-2_0-0

//Установка нажатия на угол тачпада(замена правой кнопки мыши)
gsettings set org.gnome.desktop.peripherals.touchpad click-method 'areas'

//Steam + PortProton
sudo zypper install python313-icoextract
zypper addrepo https://download.opensuse.org/repositories/home:Boria138:PortProton/openSUSE_Tumbleweed/home:Boria138:PortProton.repo
zypper refresh
zypper install portproton

//TRIM SSD
sudo systemctl enable fstrim.timer
sudo systemctl start fstrim.timer

//ZRAM
sudo zypper install systemd-zram-service
sudo systemctl enable --now zramswap.service
sudo systemctl enable zramswap.service
sudo systemctl start zramswap.service

//Zen-kernel
sudo zypper addrepo https://download.opensuse.org/repositories/home:hwsnemo:kernels/openSUSE_Tumbleweed/home:hwsnemo:kernels.repo
sudo zypper ref
sudo zypper in kernel-liquorix

//OBS + osc
sudo zypper addrepo -f https://download.opensuse.org/repositories/openSUSE:/Tools/openSUSE_Tumbleweed/openSUSE:Tools.repoudo pacma
